name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploying Docker images to staging environment
        run: echo "Deploying Docker images to staging environment..."

      - name: Create Resource Group
        run: |
          az group create \
            --name sit722-staging-rg \
            --location australiaeast || true

      - name: Create AKS cluster
        run: |
          az aks create \
            --resource-group sit722-staging-rg \
            --name sit722-staging-cluster \
            --node-count 1 \
            --node-vm-size Standard_B2s \
            --enable-managed-identity \
            --generate-ssh-keys || true

      - name: Allow AKS to pull from ACR (manual role assignment)
        run: |
          ACR_NAME=sit722acrishita
          RG_NAME=sit722-rg
          SP_ID=$(az aks show -g sit722-staging-rg -n sit722-staging-cluster --query identity.principalId -o tsv || echo "")
          if [ -n "$SP_ID" ]; then
            az role assignment create \
              --assignee $SP_ID \
              --role AcrPull \
              --scope $(az acr show --name $ACR_NAME --resource-group $RG_NAME --query id -o tsv) \
              || echo "ACR role assignment failed but continuing"
          else
            echo "No SP found, skipping role assignment"
          fi

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group sit722-staging-rg \
            --name sit722-staging-cluster \
            --overwrite-existing || true

      - name: Deploy manifests to AKS
        run: |
          kubectl apply -f task10_2d/k8s/ || true

      - name: Finished
        run: echo "âœ… Deployment workflow completed successfully!"
