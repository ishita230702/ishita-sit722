name: Staging Deployment

on:
  workflow_run:
    workflows: ["CI Pipeline"]   # Must match ci.yml workflow name
    types:
      - completed

jobs:
  deploy-to-staging:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Push Docker Images to ACR
        run: |
          echo "Building and pushing Docker images for all services..."

          az acr build \
            --registry sit722acrishita \
            --image frontend:${{ github.sha }} \
            ./task10_2d/frontend

          az acr build \
            --registry sit722acrishita \
            --image customer-service:${{ github.sha }} \
            ./task10_2d/customer-service

          az acr build \
            --registry sit722acrishita \
            --image order-service:${{ github.sha }} \
            ./task10_2d/order-service

          az acr build \
            --registry sit722acrishita \
            --image product-service:${{ github.sha }} \
            ./task10_2d/product-service

          az acr build \
            --registry sit722acrishita \
            --image postgres:${{ github.sha }} \
            ./task10_2d/postgres

      - name: Create Staging AKS Cluster
        run: |
          echo "Deploying Docker images to staging environment..."
          az group create --name sit722-staging-rg --location australiaeast

          az aks create \
            --resource-group sit722-staging-rg \
            --name sit722-staging-cluster \
            --node-count 1 \
            --generate-ssh-keys \
            --attach-acr sit722acrishita \
            --node-vm-size Standard_B2s \
            --enable-managed-identity

          az aks get-credentials --resource-group sit722-staging-rg --name sit722-staging-cluster

      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f task10_2d/k8s/

      - name: Run Acceptance Tests
        run: |
          echo "Running simple smoke tests..."
          kubectl get pods
          kubectl get services

      - name: Destroy Staging Environment
        if: always()
        run: |
          echo "Cleaning up staging environment..."
          az group delete --name sit722-staging-rg --yes --no-wait
