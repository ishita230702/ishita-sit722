name: Staging Deployment

on:
  workflow_run:
    workflows: ["CI Pipeline"]   # must match your CI pipeline name
    types:
      - completed

jobs:
  deploy-to-staging:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Staging Cluster
        run: |
          echo "Deploying Docker images to staging environment..."

          # Create staging RG
          az group create --name sit722-staging-rg --location australiaeast

          # Create AKS cluster (no --attach-acr here)
          az aks create \
            --resource-group sit722-staging-rg \
            --name sit722-staging-cluster \
            --node-count 1 \
            --node-vm-size Standard_B2s \
            --generate-ssh-keys

          # Grant ACR Pull access manually
          CLIENT_ID=$(az aks show \
            --resource-group sit722-staging-rg \
            --name sit722-staging-cluster \
            --query "identityProfile.kubeletidentity.clientId" -o tsv)

          ACR_ID=$(az acr show --name sit722acrishita --query id -o tsv)

          az role assignment create \
            --assignee $CLIENT_ID \
            --role AcrPull \
            --scope $ACR_ID

          # Connect kubectl
          az aks get-credentials --resource-group sit722-staging-rg --name sit722-staging-cluster

          # Apply Kubernetes manifests
          kubectl apply -f k8s/

      - name: Run Acceptance Tests
        run: |
          echo "Running simple smoke tests..."
          kubectl get pods -o wide
          kubectl get services

      - name: Destroy Staging Environment
        if: always()
        run: |
          echo "Cleaning up staging environment..."
          az group delete --name sit722-staging-rg --yes --no-wait
