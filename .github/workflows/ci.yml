name: CI Pipeline

on:
  push:
    branches: [ "testing", "main" ]
  pull_request:
    branches: [ "testing", "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies (root)
        run: |
          pip install -r backend/order-service/requirements.txt
          pip install pytest

      # Run tests for each backend
      - name: Run tests (Customer Service)
        run: |
          cd backend/customer-service
          pip install -r requirements.txt
          pytest -v || exit 1

      - name: Run tests (Product Service)
        run: |
          cd backend/product-service
          pip install -r requirements.txt
          pytest -v || exit 1

      - name: Run tests (Order Service)
        run: |
          cd backend/order-service
          pip install -r requirements.txt
          pytest -v || exit 1

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Customer Service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:latest ./backend/customer-service
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:latest

      - name: Build and Push Product Service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/product-service:latest ./backend/product-service
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/product-service:latest

      - name: Build and Push Order Service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/order-service:latest ./backend/order-service
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/order-service:latest

      - name: Build and Push Frontend
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest ./frontend
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest
