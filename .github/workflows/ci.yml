name: CI Pipeline - Build and Push to ACR

on:
  push:
    branches:
      - testing

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: customers
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install test dependencies
      run: |
        pip install -r backend/customer_service/requirements-dev.txt
        pip install -r backend/order_service/requirements-dev.txt
        pip install -r backend/product_service/requirements-dev.txt

    - name: Wait for Postgres and create test databases
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        until pg_isready -h localhost -U postgres; do
          echo "‚è≥ Waiting for postgres..."
          sleep 2
        done
        psql -h localhost -U postgres -c "CREATE DATABASE customers;" || true
        psql -h localhost -U postgres -c "CREATE DATABASE orders;" || true
        psql -h localhost -U postgres -c "CREATE DATABASE products;" || true
      env:
        PGPASSWORD: postgres

    - name: Run backend tests
      run: |
        DATABASE_URL=postgresql://postgres:postgres@localhost:5432/customers pytest backend/customer_service/tests
        DATABASE_URL=postgresql://postgres:postgres@localhost:5432/orders pytest backend/order_service/tests
        DATABASE_URL=postgresql://postgres:postgres@localhost:5432/products pytest backend/product_service/tests

    - name: Log in to ACR
      run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Build and Push Customer Service
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:latest ./backend/customer_service
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:latest

    - name: Build and Push Order Service
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/order-service:latest ./backend/order_service
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/order-service:latest

    - name: Build and Push Product Service
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/product-service:latest ./backend/product_service
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/product-service:latest

    - name: Build and Push Frontend
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest ./frontend
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest
